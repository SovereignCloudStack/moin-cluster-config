---
apiVersion: v1
kind: ConfigMap
metadata:
  name: values-workload
  namespace: flux-system
data:
  values.yaml: |
    thanosStorage:
      secret:
        name: thanos-objstore-config
        key: objstore.yml

    thanos:
      fullnameOverride: thanos
      existingObjstoreSecret: thanos-objstore-config
      bucketweb:
        enabled: true
      storegateway:
        enabled: true
      compactor:
        enabled: true
        persistence:
          size: 20Gi
      query:
        replicaCount: 2
        replicaLabel: [prometheus_replica]
    ## FIXME: Thanos query is temporary exposed via (unsecure) NodePort, see https://github.com/SovereignCloudStack/k8s-observability/issues/32
    ##   Thanos query should be exposed via ingress, see below commented section
        serviceGrpc:
          type: NodePort
          nodePorts:
            grpc: "31050"

    dnation-kubernetes-monitoring:
      dnation-kubernetes-jsonnet-translator:
        enabled: false
      prometheusRules:
        enable: false
      grafanaDashboards:
        enable: false

    loki:
      enabled: false
    promtail:
      extraArgs:
      - -client.external-labels=cluster=moin-cluster
      config:
        snippets:
          scrapeConfig: |
            # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference
            - job_name: kubernetes-pods
              pipeline_stages:
                - cri: {}
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels:
                    - __meta_kubernetes_pod_controller_name
                  regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
                  action: replace
                  target_label: __tmp_controller_name
                - source_labels:
                    - __meta_kubernetes_pod_label_app_kubernetes_io_name
                    - __meta_kubernetes_pod_label_app
                    - __tmp_controller_name
                    - __meta_kubernetes_pod_name
                  regex: ^;*([^;]+)(;.*)?$
                  action: replace
                  target_label: app
                - source_labels:
                    - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                    - __meta_kubernetes_pod_label_instance
                  regex: ^;*([^;]+)(;.*)?$
                  action: replace
                  target_label: instance
                - source_labels:
                    - __meta_kubernetes_pod_label_app_kubernetes_io_component
                    - __meta_kubernetes_pod_label_component
                  regex: ^;*([^;]+)(;.*)?$
                  action: replace
                  target_label: component
                - action: replace
                  source_labels:
                  - __meta_kubernetes_pod_node_name
                  target_label: node_name
                - action: replace
                  source_labels:
                  - __meta_kubernetes_namespace
                  target_label: namespace
                - action: replace
                  replacement: $1
                  separator: /
                  source_labels:
                  - namespace
                  - app
                  target_label: job
                - action: replace
                  source_labels:
                  - __meta_kubernetes_pod_name
                  target_label: pod
                - action: replace
                  source_labels:
                  - __meta_kubernetes_pod_container_name
                  target_label: container
                - action: replace
                  replacement: /var/log/pods/*$1/*.log
                  separator: /
                  source_labels:
                  - __meta_kubernetes_pod_uid
                  - __meta_kubernetes_pod_container_name
                  target_label: __path__
                - action: replace
                  regex: true/(.*)
                  replacement: /var/log/pods/*$1/*.log
                  separator: /
                  source_labels:
                  - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
                  - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
                  - __meta_kubernetes_pod_container_name
                  target_label: __path__
                  - action: keep
                    source_labels:
                      - __meta_kubernetes_namespace
                    regex: capo-system|capi-system|capi-kamaji-control-plane-system|cso-system|cspo-system

    kube-prometheus-stack:
      prometheus:
        prometheusSpec:
          thanos:
            objectStorageConfig:
              existingSecret:
                name: thanos-objstore-config
                key: objstore.yml
          replicas: 2
          externalLabels:
            cluster: "moin-cluster"
      alertmanager:
        enabled: false
      grafana:
        enabled: false
      defaultRules:
        create: false
      kubeScheduler:
        serviceMonitor:
          # TODO fix this:
          insecureSkipVerify: true
      kubeControllerManager:
        serviceMonitor:
          # TODO fix this:
          insecureSkipVerify: true
